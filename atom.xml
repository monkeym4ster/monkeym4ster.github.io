<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[M4ster's blog]]></title>
  <subtitle><![CDATA[分享学习和生活中的点滴]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.m4ster.net/"/>
  <updated>2014-12-25T09:39:51.054Z</updated>
  <id>http://www.m4ster.net/</id>
  
  <author>
    <name><![CDATA[M4ster]]></name>
    <email><![CDATA[www.m4ster@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[《XSS跨站脚本攻击剖析与防御》学习笔记（一）]]></title>
    <link href="http://www.m4ster.net/2014/12/25/%E3%80%8AXSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E5%89%96%E6%9E%90%E4%B8%8E%E9%98%B2%E5%BE%A1%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.m4ster.net/2014/12/25/《XSS跨站脚本攻击剖析与防御》学习笔记（一）/</id>
    <published>2014-12-25T07:03:03.000Z</published>
    <updated>2014-12-25T08:49:18.000Z</updated>
    <content type="html"><![CDATA[<h2 id="跨站脚本介绍">跨站脚本介绍</h2>
<p>XSS自1996年诞生以来，如今已经过十余年的演化。随着Web技术的蓬勃发展，XSS无疑已经变成了最流行和严重的Web安全漏洞，更被OWASP（<code>Open Web Application Security Project</code>）组织评为十大安全漏洞中的第二威胁漏洞。</p>
<h3 id="什么是XSS跨站脚本">什么是XSS跨站脚本</h3>
<p>跨站脚本（<code>Cross-Site Scripting,XSS</code>）是一种常见的Web应用程序中的计算安全漏洞。是由于Web应用对于用户的输入过滤不足而产生的。攻击者可以利用网站的漏洞把恶意脚本代码注入到网页之中，当其他用户浏览这些网页的时候，就会执行其中的恶意代码。</p>
<p>由于和另外一种网页技术——层叠样式表（<code>Cascading Style Sheets,CSS</code>）的缩写一样，为了防止混肴，故把原本的CSS简称为XSS。</p>
<p>我们通常把XSS脚本攻击理解为一种Web安全漏洞，也可以理解为一种攻击手段。</p>
<h3 id="为什么XSS跨站漏洞会如此流行">为什么XSS跨站漏洞会如此流行</h3>
<ul>
<li>Web浏览器本身的设计是不安全的。浏览器只会执行，不会判断数据和程序代码是否恶意。</li>
<li>输入和输出是Web应用程序最基本的交互，在这过程之中如果没有做好安全防护，Web程序很容易出现XSS漏洞</li>
<li>Web应用程序通常是通过团队合作来完成的，程序员之间的水平参差不齐，很少人受过正规的安全培训（<code>木桶原理</code>）</li>
<li>开发人员和安全工程师不够重视此类漏洞</li>
<li>XSS技术的运用灵活多变，防御起来较为困难</li>
<li>……</li>
</ul>
<h3 id="XSS跨站脚本实例">XSS跨站脚本实例</h3>
<h4 id="漏洞的成因">漏洞的成因</h4>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span>test<span class="tag">&lt;/<span class="title">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">alert(<span class="string">"XSS"</span>)</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></div></pre></td></tr></table></figure>

<p>HTML中的script元素标记中间包含javascript，浏览器调用脚本引擎处理。XSS攻击就是将非法的JavaScript、VBscript等脚本注入到用户浏览的网页上执行。</p>
<h4 id="利用方法演示">利用方法演示</h4>
<p>利用XSS弹出恶意警告框，代码为：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">scirpt</span>&gt;</span>alert("XSS")<span class="tag">&lt;/<span class="title">script</span>&gt;</span></div></pre></td></tr></table></figure>

<p>XSS输入也可能是HTML代码段，如要使网页不停的刷新，代码为：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"refresh"</span> <span class="attribute">content</span>=<span class="value">"0;"</span>&gt;</span></div></pre></td></tr></table></figure>

<p>嵌入其他网站的链接，代码为：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="title">iframe</span> <span class="attribute">src</span>=<span class="value">http:</span>//<span class="attribute">www.test.com</span> <span class="attribute">width</span>=<span class="value">0</span> <span class="attribute">height</span>=<span class="value">0</span>&gt;</span><span class="tag">&lt;/<span class="title">iframe</span>&gt;</span></div></pre></td></tr></table></figure>

<h4 id="攻击原理具体说明">攻击原理具体说明</h4>
<p>写一个PHP脚本，脚本代码为：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">&lt;?php</span></div><div class="line">    <span class="keyword">echo</span> <span class="variable">$_REQUEST</span>[<span class="string">'name'</span>];</div><div class="line"><span class="preprocessor">?&gt;</span></div></pre></td></tr></table></figure>

<p>以上代码使用<code>$_REQUEST[&#39;name&#39;]</code>来获取用户输入的name的值，然后直接echo输出。<br>当用户提交参数为<code>demo.php?name=test</code>时，页面直接输出<code>test</code>，当用户提交的参数为<code>demo.php?name=&lt;script&gt;alert(/XSS/)&lt;/script&gt;</code>时，页面中的JS代码被脚本引擎解析，弹出了内容为<code>/XSS/</code>的警告框。<br>由于PHP网页直接输出了我们的测试代码，从而导致一个XSS的生成。</p>
<h2 id="对于Web安全的威胁">对于Web安全的威胁</h2>
<p>以往，XSS跨站脚本一直被当作是一类鸡肋的漏洞，没有什么好利用的地方，只能弹出对话框而已，稍微有点危害的就是用来盗取用户Cookies资料和网页挂马。</p>
<p>通常情况下，攻击者通过注入如<code>alert(/XSS/)</code>之类的JS代码来证明XSS，该代码能够导致应用程序弹出带有XSS字样的窗口。从技术角度来说，这种示例确实能够证明XSS漏洞的存在性，但是并没有真实的反映其危害型。</p>
<p>最近几年很多人投入了XSS技术的研究，世界上的第一个跨站脚本蠕虫（<code>XSS Worm</code>）Samy，于2005年10月在国外诞生，并在20小时内迅速感染了100多万个用户，最终导致该网站瘫痪。</p>
<p>而且，许多基于XSS的攻击框架大量涌现，如国外知名的BeFF、XSS Shell、attackAPI；国内的Anehta、XSSER.ME等。  </p>
<p>如今，只要一个站点存在跨站脚本漏洞，该站点的所有用户都可能受到危害。黑客一旦挖掘到XSS漏洞，就可以利用该漏洞实施回话劫持、资料窃取、渗透入侵和传播蠕虫病毒等一系列攻击。</p>
<h3 id="可能带来的危害总结">可能带来的危害总结</h3>
<ul>
<li>网络钓鱼，包括盗取各类用户帐号</li>
<li>窃取用户cookies资料</li>
<li>劫持用户（浏览器）会话，从而执行任意操作，例如非法转账、强制发表日志、发送电子邮件等</li>
<li>强制弹出广告页面、刷流量等</li>
<li>网页挂马</li>
<li>进行大量的客户端攻击，如DDos攻击</li>
<li>获取客户端信息，如浏览历史、真实IP、开放端口等</li>
<li>结合其他漏洞，如CSRF漏洞，实施进一步作恶</li>
<li>传播跨站蠕虫脚本等</li>
<li>……</li>
</ul>
<h2 id="XSS的分类">XSS的分类</h2>
<p>XSS根据其特型和利用手法的不同，主要分为两大类型：反射型和持久型</p>
<h3 id="反射型XSS">反射型XSS</h3>
<h4 id="介绍">介绍</h4>
<p>反射型跨站脚本也称为非持久型、参数型跨站脚本。主要用于将恶意脚本附加到URL地址的参数中，例如：<br><code>http://www.test.com/search.php?key=&quot;&gt;&lt;script&gt;alert(/XSS/)&lt;/script&gt;</code><br><code>http://www.test.com/help.shtml?query=%3Cscript%3Ealert%28/XSS/%29%3C/script%3E</code><br><code>http://www.test.com/logout.asp?out=1&amp;url=javascript:alert(/XSS/)</code>  </p>
<h4 id="攻击手法">攻击手法</h4>
<p>通常是使用特定的手法（<code>比如利用电子邮件</code>），诱使用户去访问一个包含恶意代码的URL，当用户点击这些专门设计的链接的时候，恶意的JS代码会直接在用户浏览器上执行。</p>
<h4 id="特点">特点</h4>
<p>反射型XSS的特点是：只在用户单击的时候触发，而且只执行一次，非持久化，所以称为反射型跨站脚本。  </p>
<h4 id="危害">危害</h4>
<p>反射型XSS的危害往往不如持久型XSS，因为恶意代码暴露在URL参数当中，并时刻要求用户单击方可触发，稍微有点安全意识的用户可以轻易看穿该链接是不可信任的。如此一来，反射型XSS的攻击成本要比持久型XSS高许多。<br>但，黑客在发动跨站脚本攻击前会精心布置一切，如恶意URL暴露的问题，可以通过各种编码的转换来解决。</p>
<h3 id="持久型XSS">持久型XSS</h3>
<h4 id="介绍-1">介绍</h4>
<p>持久型跨站脚本也等于存储型跨站脚本，比反射型跨站脚本更具有威胁性，并且可能影响 到Web服务器自身的安全。</p>
<h4 id="攻击手法-1">攻击手法</h4>
<p>此类XSS不需要用户单击特定URL，攻击者只需要事先将恶意JS代码上传或存储到漏洞服务器中，只要受害者浏览包含此恶意JS代码的页面就会执行恶意代码。</p>
<h4 id="特点-1">特点</h4>
<p>持久型XSS通常出现在网站的留言、评论、博客日志等交互处，恶意脚本被存储到客户端或者服务器的数据库中，当其他用户浏览该网页时，站点即从数据库中读取恶意用户存入的非法代码，然后显示在页面当中，即在受害者的主机上的浏览器执行此恶意代码。</p>
<h4 id="危害-1">危害</h4>
<p>持久型XSS不需要用户去单击链接就能除非，所以它的危害比反射型XSS要大。<br>更严重的是，利用此类XSS能够轻易编写危害性更大的XSS蠕虫，跨站蠕虫是使用Ajax/JavaScript语言编写的蠕虫病毒，能够在网站中实现病毒的迅速传播。XSS蠕虫会直接影响网站的所有用户。  </p>
<h3 id="总结">总结</h3>
<p>XSS攻击作为Web业务的一大威胁，危害的不仅仅是Web业务本身，对使用Web服务的用户也会造成直接的影响。<br>所以，要谨记一点：无论是反射型XSS还是持久型XSS，都具备一定程度的危害性！Web开发人员不应该忽略应用程序中的任何漏洞，因为这些潜在的问题都可能给网站和用户带来无法想象的影响和危害。</p>
<h2 id="XSS的简单挖掘">XSS的简单挖掘</h2>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="跨站脚本介绍">跨站脚本介绍</h2>
<p>XSS自1996年诞生以来，如今已经过十余年的演化。随着Web技术的蓬勃发展，XSS无疑已经变成了最流行和严重的Web安全漏洞，更被OWASP（<code>Open Web Application Security P]]>
    </summary>
    
      <category term="XSS" scheme="http://www.m4ster.net/tags/XSS/"/>
    
      <category term="跨站攻击" scheme="http://www.m4ster.net/tags/%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/"/>
    
      <category term="读书笔记" scheme="http://www.m4ster.net/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《XSS跨站脚本攻击剖析与防御》学习笔记（前言）]]></title>
    <link href="http://www.m4ster.net/2014/12/25/%E3%80%8AXSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB%E5%89%96%E6%9E%90%E4%B8%8E%E9%98%B2%E5%BE%A1%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E5%89%8D%E8%A8%80%EF%BC%89/"/>
    <id>http://www.m4ster.net/2014/12/25/《XSS跨站脚本攻击剖析与防御》学习笔记（前言）/</id>
    <published>2014-12-25T06:32:28.000Z</published>
    <updated>2014-12-25T07:03:42.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>近来在学习《XSS跨站脚本攻击剖析与防御》这本书，此书从XSS的基础攻击原理、危害以及一些常用的利用/防御的技巧再到高级利用方式衍生到Web 2.0的最大威胁——跨站脚本蠕虫，由浅入深的阐释了XSS对于网络安全意味着什么。在这里和大家分享下我的学习心得和知识的总结。</p>
<h3 id="XSS是什么">XSS是什么</h3>
<p>XSS（<code>Cross-site Scripting</code>）跨站脚本攻击，XSS作为最常见的计算机安全漏洞，在世界各地的网站上疯狂肆虐，即使最知名的网站也曾遭受过XSS漏洞攻击。</p>
<h3 id="XSS给大部分人留下的印象">XSS给大部分人留下的印象</h3>
<p>由于XSS属于被动式攻击，且不易利用，所以一直不被重视。</p>
<ul>
<li>XSS？反正XSS又不能直接获取我的root权限。</li>
<li>跨站脚本是在客户端运行的，对我的网站没有危害。</li>
<li>XSS等同于鸡肋漏洞。</li>
<li>……</li>
</ul>
<h3 id="XSS的危害">XSS的危害</h3>
<ul>
<li>可以用来劫持浏览器用户的会话</li>
<li>劫持客户端cookies、网络钓鱼</li>
<li>让受害用户对服务器产生大量请求，形同对服务器的分布式拒绝服务攻击（<code>DDos</code>）</li>
<li>……</li>
</ul>
<h3 id="XSS对于安全研究者来说">XSS对于安全研究者来说</h3>
<ul>
<li>攻击方式众多，灵活多变</li>
<li>对于现在的社交网络，甚至可以衍生出蠕虫般的自我复制能力</li>
<li>……</li>
</ul>
<h2 id="总结">总结</h2>
<p>XSS攻击对于Web 2.0时代是不容忽视的安全威胁。作为安全研究者，必须要重视。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2>
<p>近来在学习《XSS跨站脚本攻击剖析与防御》这本书，此书从XSS的基础攻击原理、危害以及一些常用的利用/防御的技巧再到高级利用方式衍生到Web 2.0的最大威胁——跨站脚本蠕虫，由浅入深的阐释了XSS对于网络安全意味着什么。在这里和大家]]>
    </summary>
    
      <category term="XSS" scheme="http://www.m4ster.net/tags/XSS/"/>
    
      <category term="跨站攻击" scheme="http://www.m4ster.net/tags/%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://www.m4ster.net/2014/12/24/hello-world/"/>
    <id>http://www.m4ster.net/2014/12/24/hello-world/</id>
    <published>2014-12-24T04:39:01.000Z</published>
    <updated>2014-12-24T04:39:01.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
